# This file is used to configure your project.
# Read more about the various options under:
# http://setuptools.readthedocs.io/en/latest/setuptools.html#configuring-setup-using-setup-cfg-files

[metadata]
name = mud
description = Maximal Updated Density equations for Data-Consistent Inversion
author = Mathematical Michael
author_email = consistentbayes@gmail.com
license = mit
long_description = file: README.rst
long_description_content_type = text/x-rst; charset=UTF-8
url = https://github.com/mathematicalmichael/mud.git
project_urls =
    Documentation = https://mud.dataconsistent.com/
# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any
# Add here all kinds of additional classifiers as defined under
# https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python

[options]
zip_safe = False
packages = find_namespace:
include_package_data = True
package_dir =
    =src

# DON'T CHANGE THE FOLLOWING LINE! IT WILL BE UPDATED BY PYSCAFFOLD!
# Add here dependencies of your project (semicolon/line-separated), e.g.
install_requires =
    importlib-metadata; python_version<"3.10"
    numpy>=1.20
    scipy
    matplotlib
    scikit-learn

# Require a specific Python version, e.g. Python 2.7 or >= 3.4
python_requires = >=3.7

[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
dev =
    black[jupyter]
    coverage
    coveralls
    flake8
    isort
    mypy
    pre-commit
    pytest
    pytest-cov

pub =
    setuptools
    setuptools_scm
    wheel
    twine

examples =
    click
    tqdm
    prettytable
    pandas
    wget


[options.entry_points]
console_scripts =
    mud = mud.cli:cli

[tool:pytest]
# Options for py.test:
# Specify command line options as you would do when invoking py.test directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
# We want to run unit tests in `tests/` but also doctests in `src/mud/`
addopts =
    tests/
    --cov mud
    --cov-report term-missing
    --cov-report xml
    --verbose
    --doctest-modules src/mud

norecursedirs =
    dist
    build
    .tox

testpaths = tests

[aliases]
dists = bdist_wheel

[bdist_wheel]
# Use this option if your package is pure-python
universal = 1

[build_sphinx]
source_dir = docs
build_dir = build/sphinx

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no-vcs = 1
formats = bdist_wheel

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 4.0.2
package = mud
extensions = 
    markdown

[isort]
# make it compatible with black
profile = black
